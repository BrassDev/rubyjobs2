c
response.methods
response.body
response
c
have_selector("ul")
quit
response
response.body
quit
expect(assigns[:jobs][1]).to eq(@job)
assigns[:jobs][1]
assigns[:jobs][0]
c
assigns
quit
reload!
assigns[:jobs]
assigns
c
quit
y
quit
self.all(:order => :name).map do |l| [l.name] end
self.all.map do |l| [l.name] end
self.all.map do |l|
self.all
c
n
Rails.env
c
n
c
puts Rails.configuration.database_configuration
c
n
c
n
c
n
Rails.env
n
c
n
Rails.env
n
Rails.env
n
Rails.env
Rails
quit
ENV['RAILS_ENV']
Rails.env
c
__FILE__
File.expand_path("../../config/environment", __FILE__)
c
job.errors.messages
job.errors
job.valid?
job
job.errors.messages[0].to_s
c
n
job.errors.messages[0].to_s
njob.errors.messages[0].to_s
n
job.errors.messages[0]
n
c
job.errors.messages
c
job.errors.messages
job.errors
job
c
job.errors.messages[field]
job.errors.messages
job.errors
c
request.base_url
resource
base_url
c
@base_url
n
c
default_url_options[:base_url]
default_url_options
quit
default_url_options
base_url
c
default_url_options[:host]
default_url_options
c
@locations
@root_url
c
@root_url
n
c
@root_url
c
request.base_uri
request.base_url
request.methods.map{|i| puts i}
(request.methods.map(|i|){puts i}).grep("url")
request.methods.map(|i|){puts i}.grep("url")
request.methods.map{|i| puts i}
request.methods.map(|i|){puts i}
request.methods
request.request_uri
request.original_uri
request.original_url
c
root_url
@root_url
c
@root_url
n
root_url
c
root_url
c
ENV['EMAIL_PROVIDER_PASSWORD']
ENV['EMAIL_PROVIDER_USERNAME']
ENV['EMAIL_PROVIDER_PORT']
ENV['EMAIL_PROVIDER_ADDRESS']
c
exception
n
@job = Job.new
